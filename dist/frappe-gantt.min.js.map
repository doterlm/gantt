{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = 'year';\nconst MONTH = 'month';\nconst DAY = 'day';\nconst HOUR = 'hour';\nconst MINUTE = 'minute';\nconst SECOND = 'second';\nconst MILLISECOND = 'millisecond';\n\nconst month_names = {\n    en: [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ],\n    es: [\n        'Enero',\n        'Febrero',\n        'Marzo',\n        'Abril',\n        'Mayo',\n        'Junio',\n        'Julio',\n        'Agosto',\n        'Septiembre',\n        'Octubre',\n        'Noviembre',\n        'Diciembre',\n    ],\n    it: [\n        'Gennaio',\n        'Febbraio',\n        'Marzo',\n        'Aprile',\n        'Maggio',\n        'Giugno',\n        'Luglio',\n        'Agosto',\n        'Settembre',\n        'Ottobre',\n        'Novembre',\n        'Dicembre',\n    ],\n    ru: [\n        'Январь',\n        'Февраль',\n        'Март',\n        'Апрель',\n        'Май',\n        'Июнь',\n        'Июль',\n        'Август',\n        'Сентябрь',\n        'Октябрь',\n        'Ноябрь',\n        'Декабрь',\n    ],\n    ptBr: [\n        'Janeiro',\n        'Fevereiro',\n        'Março',\n        'Abril',\n        'Maio',\n        'Junho',\n        'Julho',\n        'Agosto',\n        'Setembro',\n        'Outubro',\n        'Novembro',\n        'Dezembro',\n    ],\n    fr: [\n        'Janvier',\n        'Février',\n        'Mars',\n        'Avril',\n        'Mai',\n        'Juin',\n        'Juillet',\n        'Août',\n        'Septembre',\n        'Octobre',\n        'Novembre',\n        'Décembre',\n    ],\n    tr: [\n        'Ocak',\n        'Şubat',\n        'Mart',\n        'Nisan',\n        'Mayıs',\n        'Haziran',\n        'Temmuz',\n        'Ağustos',\n        'Eylül',\n        'Ekim',\n        'Kasım',\n        'Aralık',\n    ],\n    zh: [\n        '一月',\n        '二月',\n        '三月',\n        '四月',\n        '五月',\n        '六月',\n        '七月',\n        '八月',\n        '九月',\n        '十月',\n        '十一月',\n        '十二月',\n    ],\n    de: [\n        'Januar',\n        'Februar',\n        'März',\n        'April',\n        'Mai',\n        'Juni',\n        'Juli',\n        'August',\n        'September',\n        'Oktober',\n        'November',\n        'Dezember',\n    ],\n    hu: [\n        'Január',\n        'Február',\n        'Március',\n        'Április',\n        'Május',\n        'Június',\n        'Július',\n        'Augusztus',\n        'Szeptember',\n        'Október',\n        'November',\n        'December',\n    ],\n};\n\nexport default {\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\n        if (date instanceof Date) {\n            return date;\n        }\n        if (typeof date === 'string') {\n            let date_parts, time_parts;\n            const parts = date.split(' ');\n\n            date_parts = parts[0]\n                .split(date_separator)\n                .map((val) => parseInt(val, 10));\n            time_parts = parts[1] && parts[1].split(time_separator);\n\n            // month is 0 indexed\n            date_parts[1] = date_parts[1] - 1;\n\n            let vals = date_parts;\n\n            if (time_parts && time_parts.length) {\n                if (time_parts.length == 4) {\n                    time_parts[3] = '0.' + time_parts[3];\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\n                }\n                vals = vals.concat(time_parts);\n            }\n\n            return new Date(...vals);\n        }\n    },\n\n    to_string(date, with_time = false) {\n        if (!(date instanceof Date)) {\n            throw new TypeError('Invalid argument type');\n        }\n        const vals = this.get_date_values(date).map((val, i) => {\n            if (i === 1) {\n                // add 1 for month\n                val = val + 1;\n            }\n\n            if (i === 6) {\n                return padStart(val + '', 3, '0');\n            }\n\n            return padStart(val + '', 2, '0');\n        });\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n        return date_string + (with_time ? ' ' + time_string : '');\n    },\n\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'en') {\n        if (date === undefined || date === null) return;\n        const values = this.get_date_values(date).map((d) => padStart(d, 2, 0));\n        const format_map = {\n            YYYY: values[0],\n            MM: padStart(+values[1] + 1, 2, 0),\n            DD: values[2],\n            HH: values[3],\n            mm: values[4],\n            ss: values[5],\n            SSS: values[6],\n            D: values[2],\n            MMMM: month_names[lang][+values[1]],\n            MMM: month_names[lang][+values[1]],\n        };\n\n        let str = format_string;\n        const formatted_values = [];\n\n        Object.keys(format_map)\n            .sort((a, b) => b.length - a.length) // big string first\n            .forEach((key) => {\n                if (str.includes(key)) {\n                    str = str.replace(key, `$${formatted_values.length}`);\n                    formatted_values.push(format_map[key]);\n                }\n            });\n\n        formatted_values.forEach((value, i) => {\n            str = str.replace(`$${i}`, value);\n        });\n\n        return str;\n    },\n\n    diff(date_a, date_b, scale = DAY) {\n        let milliseconds, seconds, hours, minutes, days, months, years;\n\n        milliseconds = date_a - date_b;\n        seconds = milliseconds / 1000;\n        minutes = seconds / 60;\n        hours = minutes / 60;\n        days = hours / 24;\n        months = days / 30;\n        years = months / 12;\n\n        if (!scale.endsWith('s')) {\n            scale += 's';\n        }\n\n        return Math.floor(\n            {\n                milliseconds,\n                seconds,\n                minutes,\n                hours,\n                days,\n                months,\n                years,\n            }[scale]\n        );\n    },\n\n    today() {\n        const vals = this.get_date_values(new Date()).slice(0, 3);\n        return new Date(...vals);\n    },\n\n    now() {\n        return new Date();\n    },\n\n    add(date, qty, scale) {\n        console.log(date);\n        if (date === undefined || date === null) return;\n        qty = parseInt(qty, 10);\n        const vals = [\n            date.getFullYear() + (scale === YEAR ? qty : 0),\n            date.getMonth() + (scale === MONTH ? qty : 0),\n            date.getDate() + (scale === DAY ? qty : 0),\n            date.getHours() + (scale === HOUR ? qty : 0),\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\n            date.getSeconds() + (scale === SECOND ? qty : 0),\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n        ];\n        return new Date(...vals);\n    },\n\n    start_of(date, scale) {\n        if (date === undefined || date === null) return;\n        const scores = {\n            [YEAR]: 6,\n            [MONTH]: 5,\n            [DAY]: 4,\n            [HOUR]: 3,\n            [MINUTE]: 2,\n            [SECOND]: 1,\n            [MILLISECOND]: 0,\n        };\n\n        function should_reset(_scale) {\n            const max_score = scores[scale];\n            return scores[_scale] <= max_score;\n        }\n\n        const vals = [\n            date.getFullYear(),\n            should_reset(YEAR) ? 0 : date.getMonth(),\n            should_reset(MONTH) ? 1 : date.getDate(),\n            should_reset(DAY) ? 0 : date.getHours(),\n            should_reset(HOUR) ? 0 : date.getMinutes(),\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\n        ];\n\n        return new Date(...vals);\n    },\n\n    clone(date) {\n        if (date === undefined || date === null) return;\n        return new Date(...this.get_date_values(date));\n    },\n\n    get_date_values(date) {\n        if (date === undefined || date === null) return;\n        return [\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes(),\n            date.getSeconds(),\n            date.getMilliseconds(),\n        ];\n    },\n\n    get_days_in_month(date) {\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n        const month = date.getMonth();\n\n        if (month !== 1) {\n            return no_of_days[month];\n        }\n\n        // Feb\n        const year = date.getFullYear();\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\n            return 29;\n        }\n        return 28;\n    },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n    str = str + '';\n    targetLength = targetLength >> 0;\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\n    if (str.length > targetLength) {\n        return String(str);\n    } else {\n        targetLength = targetLength - str.length;\n        if (targetLength > padString.length) {\n            padString += padString.repeat(targetLength / padString.length);\n        }\n        return padString.slice(0, targetLength) + String(str);\n    }\n}\n","export function $(expr, con) {\n    return typeof expr === 'string'\n        ? (con || document).querySelector(expr)\n        : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\n    for (let attr in attrs) {\n        if (attr === 'append_to') {\n            const parent = attrs.append_to;\n            parent.appendChild(elem);\n        } else if (attr === 'innerHTML') {\n            elem.innerHTML = attrs.innerHTML;\n        } else {\n            elem.setAttribute(attr, attrs[attr]);\n        }\n    }\n    return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n    if (animatedSvgElement === svgElement) {\n        // triggered 2nd time programmatically\n        // trigger artificial click event\n        const event = document.createEvent('HTMLEvents');\n        event.initEvent('click', true, true);\n        event.eventName = 'click';\n        animatedSvgElement.dispatchEvent(event);\n    }\n}\n\nfunction getAnimationElement(\n    svgElement,\n    attr,\n    from,\n    to,\n    dur = '0.4s',\n    begin = '0.1s'\n) {\n    const animEl = svgElement.querySelector('animate');\n    if (animEl) {\n        $.attr(animEl, {\n            attributeName: attr,\n            from,\n            to,\n            dur,\n            begin: 'click + ' + begin, // artificial click\n        });\n        return svgElement;\n    }\n\n    const animateElement = createSVG('animate', {\n        attributeName: attr,\n        from,\n        to,\n        dur,\n        begin,\n        calcMode: 'spline',\n        values: from + ';' + to,\n        keyTimes: '0; 1',\n        keySplines: cubic_bezier('ease-out'),\n    });\n    svgElement.appendChild(animateElement);\n\n    return svgElement;\n}\n\nfunction cubic_bezier(name) {\n    return {\n        ease: '.25 .1 .25 1',\n        linear: '0 0 1 1',\n        'ease-in': '.42 0 1 1',\n        'ease-out': '0 0 .58 1',\n        'ease-in-out': '.42 0 .58 1',\n    }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n    if (!callback) {\n        callback = selector;\n        $.bind(element, event, callback);\n    } else {\n        $.delegate(element, event, selector, callback);\n    }\n};\n\n$.off = (element, event, handler) => {\n    element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n    event.split(/\\s+/).forEach(function (event) {\n        element.addEventListener(event, callback);\n    });\n};\n\n$.delegate = (element, event, selector, callback) => {\n    element.addEventListener(event, function (e) {\n        const delegatedTarget = e.target.closest(selector);\n        if (delegatedTarget) {\n            e.delegatedTarget = delegatedTarget;\n            callback.call(this, e, delegatedTarget);\n        }\n    });\n};\n\n$.closest = (selector, element) => {\n    if (!element) return null;\n\n    if (element.matches(selector)) {\n        return element;\n    }\n\n    return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n    if (!value && typeof attr === 'string') {\n        return element.getAttribute(attr);\n    }\n\n    if (typeof attr === 'object') {\n        for (let key in attr) {\n            $.attr(element, key, attr[key]);\n        }\n        return;\n    }\n\n    element.setAttribute(attr, value);\n};\n","import date_utils from './date_utils';\nimport { $, createSVG, animateSVG } from './svg_utils';\n\nexport default class Bar {\n    constructor(gantt, task) {\n        this.set_defaults(gantt, task);\n        this.prepare();\n        this.draw();\n        this.bind();\n    }\n\n    set_defaults(gantt, task) {\n        this.action_completed = false;\n        this.gantt = gantt;\n        this.task = task;\n    }\n\n    prepare() {\n        this.prepare_values();\n        this.prepare_helpers();\n    }\n\n    prepare_values() {\n        this.invalid = this.task.invalid;\n        this.disabled = this.task.disabled;\n        this.height = this.gantt.options.bar_height;\n        this.x = this.compute_x();\n        this.y = this.compute_y();\n        this.corner_radius = this.gantt.options.bar_corner_radius;\n        this.duration =\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\n            this.gantt.options.step;\n        this.width = this.gantt.options.column_width * this.duration;\n        this.progress_width =\n            this.gantt.options.column_width *\n                this.duration *\n                (this.task.progress / 100) || 0;\n        this.group = createSVG('g', {\n            class: 'bar-wrapper ' + (this.task.custom_class || ''),\n            'data-id': this.task.id,\n        });\n        this.bar_group = createSVG('g', {\n            class: 'bar-group',\n            append_to: this.group,\n        });\n        this.handle_group = createSVG('g', {\n            class: 'handle-group',\n            append_to: this.group,\n        });\n    }\n\n    prepare_helpers() {\n        SVGElement.prototype.getX = function () {\n            return +this.getAttribute('x');\n        };\n        SVGElement.prototype.getY = function () {\n            return +this.getAttribute('y');\n        };\n        SVGElement.prototype.getWidth = function () {\n            return +this.getAttribute('width');\n        };\n        SVGElement.prototype.getHeight = function () {\n            return +this.getAttribute('height');\n        };\n        SVGElement.prototype.getEndX = function () {\n            return this.getX() + this.getWidth();\n        };\n    }\n\n    draw() {\n        this.draw_bar();\n        this.draw_progress_bar();\n        this.draw_label();\n        this.draw_resize_handles();\n    }\n\n    draw_bar() {\n        this.$bar = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar',\n            append_to: this.bar_group,\n        });\n\n        animateSVG(this.$bar, 'width', 0, this.width);\n\n        if (this.invalid) {\n            this.$bar.classList.add('bar-invalid');\n        }\n    }\n\n    draw_progress_bar() {\n        if (this.invalid) return;\n        this.$bar_progress = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.progress_width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar-progress',\n            append_to: this.bar_group,\n        });\n\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\n    }\n\n    draw_label() {\n        createSVG('text', {\n            x: this.x + this.width / 2,\n            y: this.y + this.height / 2,\n            innerHTML: this.task.name,\n            class: 'bar-label',\n            append_to: this.bar_group,\n        });\n        // labels get BBox in the next tick\n        requestAnimationFrame(() => this.update_label_position());\n    }\n\n    draw_resize_handles() {\n        if (this.invalid) return;\n        if (this.disabled) return;\n\n        const bar = this.$bar;\n        const handle_width = 8;\n\n        createSVG('rect', {\n            x: bar.getX() + bar.getWidth() - 9,\n            y: bar.getY() + 1,\n            width: handle_width,\n            height: this.height - 2,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'handle right',\n            append_to: this.handle_group,\n        });\n\n        createSVG('rect', {\n            x: bar.getX() + 1,\n            y: bar.getY() + 1,\n            width: handle_width,\n            height: this.height - 2,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'handle left',\n            append_to: this.handle_group,\n        });\n\n        if (this.task.progress && this.task.progress < 100) {\n            this.$handle_progress = createSVG('polygon', {\n                points: this.get_progress_polygon_points().join(','),\n                class: 'handle progress',\n                append_to: this.handle_group,\n            });\n        }\n    }\n\n    get_progress_polygon_points() {\n        const bar_progress = this.$bar_progress;\n        return [\n            bar_progress.getEndX() - 5,\n            bar_progress.getY() + bar_progress.getHeight(),\n            bar_progress.getEndX() + 5,\n            bar_progress.getY() + bar_progress.getHeight(),\n            bar_progress.getEndX(),\n            bar_progress.getY() + bar_progress.getHeight() - 8.66,\n        ];\n    }\n\n    bind() {\n        if (this.invalid) return;\n        this.setup_click_event();\n    }\n\n    setup_click_event() {\n        $.on(this.group, 'focus ' + this.gantt.options.popup_trigger, (e) => {\n            if (this.action_completed) {\n                // just finished a move action, wait for a few seconds\n                return;\n            }\n\n            this.show_popup();\n            this.gantt.unselect_all();\n            this.group.classList.add('active');\n        });\n\n        $.on(this.group, 'dblclick', (e) => {\n            if (this.action_completed) {\n                // just finished a move action, wait for a few seconds\n                return;\n            }\n\n            this.gantt.trigger_event('click', [this.task]);\n        });\n    }\n\n    show_popup() {\n        if (this.gantt.bar_being_dragged) return;\n\n        const start_date = date_utils.format(\n            this.task._start,\n            'MMM D',\n            this.gantt.options.language\n        );\n        const end_date = date_utils.format(\n            date_utils.add(this.task._end, -1, 'second'),\n            'MMM D',\n            this.gantt.options.language\n        );\n        const subtitle = start_date + ' - ' + end_date;\n\n        this.gantt.show_popup({\n            target_element: this.$bar,\n            title: this.task.name,\n            subtitle: subtitle,\n            task: this.task,\n        });\n    }\n\n    update_bar_position({ x = null, width = null }) {\n        const bar = this.$bar;\n        if (x) {\n            // get all x values of parent task\n            const xs = this.task.dependencies.map((dep) => {\n                return this.gantt.get_bar(dep).$bar.getX();\n            });\n            // child task must not go before parent\n            const valid_x = xs.reduce((prev, curr) => {\n                return x >= curr;\n            }, x);\n            if (!valid_x) {\n                width = null;\n                return;\n            }\n            this.update_attr(bar, 'x', x);\n        }\n        if (width && width >= this.gantt.options.column_width) {\n            this.update_attr(bar, 'width', width);\n        }\n        this.update_label_position();\n        this.update_handle_position();\n        this.update_progressbar_position();\n        this.update_arrow_position();\n    }\n\n    date_changed() {\n        let changed = false;\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n        if (Number(this.task._start) !== Number(new_start_date)) {\n            changed = true;\n            this.task._start = new_start_date;\n        }\n\n        if (Number(this.task._end) !== Number(new_end_date)) {\n            changed = true;\n            this.task._end = new_end_date;\n        }\n\n        if (!changed) return;\n\n        this.gantt.trigger_event('date_change', [\n            this.task,\n            new_start_date,\n            date_utils.add(new_end_date, -1, 'second'),\n        ]);\n    }\n\n    progress_changed() {\n        const new_progress = this.compute_progress();\n        this.task.progress = new_progress;\n        this.gantt.trigger_event('progress_change', [this.task, new_progress]);\n    }\n\n    set_action_completed() {\n        this.action_completed = true;\n        setTimeout(() => (this.action_completed = false), 1000);\n    }\n\n    compute_start_end_date() {\n        const bar = this.$bar;\n        const x_in_units = bar.getX() / this.gantt.options.column_width;\n        const new_start_date = date_utils.add(\n            this.gantt.gantt_start,\n            x_in_units * this.gantt.options.step,\n            'hour'\n        );\n        const width_in_units = bar.getWidth() / this.gantt.options.column_width;\n        const new_end_date = date_utils.add(\n            new_start_date,\n            width_in_units * this.gantt.options.step,\n            'hour'\n        );\n\n        return { new_start_date, new_end_date };\n    }\n\n    compute_progress() {\n        const progress =\n            (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\n        return parseInt(progress, 10);\n    }\n\n    compute_x() {\n        const { step, column_width } = this.gantt.options;\n        const task_start = this.task._start;\n        const gantt_start = this.gantt.gantt_start;\n\n        const diff = date_utils.diff(task_start, gantt_start, 'hour');\n        let x = (diff / step) * column_width;\n\n        if (this.gantt.view_is('Month')) {\n            const diff = date_utils.diff(task_start, gantt_start, 'day');\n            x = (diff * column_width) / 30;\n        }\n        return x;\n    }\n\n    compute_y() {\n        return (\n            this.gantt.options.header_height +\n            this.gantt.options.padding +\n                //_index is row_id\n            this.task._index * (this.height + this.gantt.options.padding)\n        );\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.gantt.view_is('Week')) {\n            rem = dx % (this.gantt.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 14\n                    ? 0\n                    : this.gantt.options.column_width / 7);\n        } else if (this.gantt.view_is('Month')) {\n            rem = dx % (this.gantt.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 60\n                    ? 0\n                    : this.gantt.options.column_width / 30);\n        } else {\n            rem = dx % this.gantt.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 2\n                    ? 0\n                    : this.gantt.options.column_width);\n        }\n        return position;\n    }\n\n    update_attr(element, attr, value) {\n        value = +value;\n        if (!isNaN(value)) {\n            element.setAttribute(attr, value);\n        }\n        return element;\n    }\n\n    update_progressbar_position() {\n        if (this.invalid) return;\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\n        this.$bar_progress.setAttribute(\n            'width',\n            this.$bar.getWidth() * (this.task.progress / 100)\n        );\n    }\n\n    update_label_position() {\n        const bar = this.$bar,\n            label = this.group.querySelector('.bar-label');\n\n        if (label.getBBox().width > bar.getWidth()) {\n            label.classList.add('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() + 5);\n        } else {\n            label.classList.remove('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\n        }\n    }\n\n    update_handle_position() {\n        if (this.invalid) return;\n        const bar = this.$bar;\n        this.handle_group\n            .querySelector('.handle.left')\n            .setAttribute('x', bar.getX() + 1);\n        this.handle_group\n            .querySelector('.handle.right')\n            .setAttribute('x', bar.getEndX() - 9);\n        const handle = this.group.querySelector('.handle.progress');\n        handle &&\n            handle.setAttribute('points', this.get_progress_polygon_points());\n    }\n\n    update_arrow_position() {\n        this.arrows = this.arrows || [];\n        for (let arrow of this.arrows) {\n            arrow.update();\n        }\n    }\n}\n\nfunction isFunction(functionToCheck) {\n    var getType = {};\n    return (\n        functionToCheck &&\n        getType.toString.call(functionToCheck) === '[object Function]'\n    );\n}\n","import { createSVG } from './svg_utils';\n\nexport default class Arrow {\n    constructor(gantt, from_task, to_task) {\n        this.gantt = gantt;\n        this.from_task = from_task;\n        this.to_task = to_task;\n\n        this.calculate_path();\n        this.draw();\n    }\n\n    calculate_path() {\n        let start_x =\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\n\n        const condition = () =>\n            this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\n            start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\n\n        while (condition()) {\n            start_x -= 10;\n        }\n\n        const start_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.from_task.task._index +\n            this.gantt.options.padding;\n\n        const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\n        const end_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height / 2 +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.to_task.task._index +\n            this.gantt.options.padding;\n\n        const from_is_below_to =\n            this.from_task.task._index > this.to_task.task._index;\n        const curve = this.gantt.options.arrow_curve;\n        const clockwise = from_is_below_to ? 1 : 0;\n        const curve_y = from_is_below_to ? -curve : curve;\n        const offset = from_is_below_to\n            ? end_y + this.gantt.options.arrow_curve\n            : end_y - this.gantt.options.arrow_curve;\n\n        this.path = `\n            M ${start_x} ${start_y}\n            V ${offset}\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n            L ${end_x} ${end_y}\n            m -5 -5\n            l 5 5\n            l -5 5`;\n\n        if (\n            this.to_task.$bar.getX() <\n            this.from_task.$bar.getX() + this.gantt.options.padding\n        ) {\n            const down_1 = this.gantt.options.padding / 2 - curve;\n            const down_2 =\n                this.to_task.$bar.getY() +\n                this.to_task.$bar.getHeight() / 2 -\n                curve_y;\n            const left = this.to_task.$bar.getX() - this.gantt.options.padding;\n\n            this.path = `\n                M ${start_x} ${start_y}\n                v ${down_1}\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\n                H ${left}\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\n                V ${down_2}\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n                L ${end_x} ${end_y}\n                m -5 -5\n                l 5 5\n                l -5 5`;\n        }\n    }\n\n    draw() {\n        this.element = createSVG('path', {\n            d: this.path,\n            'data-from': this.from_task.task.id,\n            'data-to': this.to_task.task.id,\n        });\n    }\n\n    update() {\n        this.calculate_path();\n        this.element.setAttribute('d', this.path);\n    }\n}\n","export default class Popup {\n    constructor(parent, custom_html) {\n        this.parent = parent;\n        this.custom_html = custom_html;\n        this.make();\n    }\n\n    make() {\n        this.parent.innerHTML = `\n            <div class=\"title\"></div>\n            <div class=\"subtitle\"></div>\n            <div class=\"pointer\"></div>\n        `;\n\n        this.hide();\n\n        this.title = this.parent.querySelector('.title');\n        this.subtitle = this.parent.querySelector('.subtitle');\n        this.pointer = this.parent.querySelector('.pointer');\n    }\n\n    show(options) {\n        if (!options.target_element) {\n            throw new Error('target_element is required to show popup');\n        }\n        if (!options.position) {\n            options.position = 'left';\n        }\n        const target_element = options.target_element;\n\n        if (this.custom_html) {\n            let html = this.custom_html(options.task);\n            html += '<div class=\"pointer\"></div>';\n            this.parent.innerHTML = html;\n            this.pointer = this.parent.querySelector('.pointer');\n        } else {\n            // set data\n            this.title.innerHTML = options.title;\n            this.subtitle.innerHTML = options.subtitle;\n            this.parent.style.width = this.parent.clientWidth + 'px';\n        }\n\n        // set position\n        let position_meta;\n        if (target_element instanceof HTMLElement) {\n            position_meta = target_element.getBoundingClientRect();\n        } else if (target_element instanceof SVGElement) {\n            position_meta = options.target_element.getBBox();\n        }\n\n        if (options.position === 'left') {\n            this.parent.style.left =\n                position_meta.x + (position_meta.width + 10) + 'px';\n            this.parent.style.top = position_meta.y + 'px';\n\n            this.pointer.style.transform = 'rotateZ(90deg)';\n            this.pointer.style.left = '-7px';\n            this.pointer.style.top = '2px';\n        }\n\n        // show\n        this.parent.style.opacity = 1;\n    }\n\n    hide() {\n        this.parent.style.opacity = 0;\n        this.parent.style.left = 0;\n    }\n}\n","import date_utils from './date_utils';\nimport { $, createSVG } from './svg_utils';\nimport Bar from './bar';\nimport Arrow from './arrow';\nimport Popup from './popup';\n\nimport './gantt.scss';\n\nconst VIEW_MODE = {\n    HOUR: 'Hour',\n    QUARTER_DAY: 'Quarter Day',\n    HALF_DAY: 'Half Day',\n    DAY: 'Day',\n    WEEK: 'Week',\n    MONTH: 'Month',\n    YEAR: 'Year',\n};\n\nexport default class Gantt {\n    constructor(wrapper, tasks, options) {\n        this.setup_options(options);\n        // this.setup_leftmenu(leftmenu);\n        this.setup_tasks(tasks);\n        this.setup_wrapper(wrapper);\n        // initialize with default view mode\n        this.change_view_mode();\n        this.bind_events();\n    }\n\n    setup_wrapper(element) {\n        let svg_element, wrapper_element;\n\n        // CSS Selector is passed\n        if (typeof element === 'string') {\n            element = document.querySelector(element);\n        }\n\n        // get the SVGElement\n        if (element instanceof HTMLElement) {\n            wrapper_element = element;\n            svg_element = element.querySelector('svg');\n        } else if (element instanceof SVGElement) {\n            svg_element = element;\n        } else {\n            throw new TypeError(\n                'Frappé Gantt only supports usage of a string CSS selector,' +\n                    \" HTML DOM element or SVG DOM element for the 'element' parameter\"\n            );\n        }\n\n        // svg element\n        if (!svg_element) {\n            // create it\n\n            this.$svg = createSVG('svg', {\n                append_to: wrapper_element,\n                class: 'gantt',\n            });\n        } else {\n            this.$svg = svg_element;\n            this.$svg.classList.add('gantt');\n        }\n\n        // wrapper element\n        this.$container = document.createElement('div');\n        this.$container.classList.add('gantt-container');\n        this.$containerleft = document.createElement('div');\n        this.$containerleft.classList.add('gantt-container-left');\n        let row_y = this.options.header_height + this.options.padding / 2;\n        let row_height = this.options.bar_height + this.options.padding;\n        let header_height = this.options.header_height + 10;\n        this.$containerleft.style.width = '100px';\n        this.$containerleft.style.height = row_y + 'px';\n        let newHeader = document.createElement('div');\n        let newHeaderText = document.createTextNode(this.options.title);\n        newHeader.id = 'newHeader';\n        newHeader.className = 'grid-background-header';\n        newHeader.style.width = '90px';\n        newHeader.style.height = header_height + 'px';\n        newHeader.style.margin = '0 auto';\n        newHeader.style.border = '1px solid #c9daeb';\n        newHeader.style.lineHeight = header_height - 2 + 'px';\n        newHeader.style.fontWeight = 'bold';\n        newHeader.appendChild(newHeaderText);\n        this.$containerleft.appendChild(newHeader);\n        for (let row of this.options.leftRows) {\n            let newElement = document.createElement('div');\n            let newText = document.createTextNode(row.name);\n            newElement.id = 'newDiv' + row.id;\n            newElement.className = 'grid-background-1';\n            newElement.style.width = '90px';\n            newElement.style.height = row_height - 2 + 'px';\n            newElement.style.margin = '0 auto';\n            newElement.style.border = '1px solid #c9daeb';\n            newElement.style.lineHeight = row_height - 2 + 'px';\n            newElement.appendChild(newText);\n            this.$containerleft.appendChild(newElement);\n        }\n\n        const parent_element = this.$svg.parentElement;\n        parent_element.appendChild(this.$containerleft);\n        parent_element.appendChild(this.$container);\n        this.$container.appendChild(this.$svg);\n\n        // popup wrapper\n        this.popup_wrapper = document.createElement('div');\n        this.popup_wrapper.classList.add('popup-wrapper');\n        this.$container.appendChild(this.popup_wrapper);\n    }\n\n    setup_options(options) {\n\n\n        const default_options = {\n            header_height: 50,\n            column_width: 30,\n            step: 24,\n            title: 'title',\n            view_modes: [...Object.values(VIEW_MODE)],\n            bar_height: 20,\n            bar_corner_radius: 3,\n            arrow_curve: 5,\n            padding: 18,\n            view_mode: 'Day',\n            date_format: 'YYYY-MM-DD',\n            popup_trigger: 'click',\n            custom_popup_html: null,\n            language: 'en',\n            disabled: true,\n            groups: {},\n        };\n        this.options = Object.assign({}, default_options, options);\n    }\n\n    setup_tasks(tasks) {\n        // prepare tasks\n        this.tasks = tasks.map((task, i) => {\n            // convert to Date objects\n            task._start = date_utils.parse(task.start);\n            task._end = date_utils.parse(task.end);\n\n            // make task invalid if duration too large\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\n                task.end = null;\n            }\n\n            // cache index\n            task._index = i;\n\n            if (typeof task.row_id === 'number') {\n                task._index = task.row_id;\n            }\n            // invalid dates\n            if (!task.start && !task.end) {\n                const today = date_utils.today();\n                task._start = today;\n                task._end = date_utils.add(today, 2, 'day');\n            }\n\n            if (!task.start && task.end) {\n                task._start = date_utils.add(task._end, -2, 'day');\n            }\n\n            if (task.start && !task.end) {\n                task._end = date_utils.add(task._start, 2, 'day');\n            }\n\n            // if hours is not set, assume the last day is full day\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n            const task_end_values = date_utils.get_date_values(task._end);\n            if (task_end_values.slice(3).every((d) => d === 0)) {\n                task._end = date_utils.add(task._end, 24, 'hour');\n            }\n\n            // invalid flag\n            if (!task.start || !task.end) {\n                task.invalid = true;\n            }\n\n            // dependencies\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\n                let deps = [];\n                if (task.dependencies) {\n                    deps = task.dependencies\n                        .split(',')\n                        .map((d) => d.trim())\n                        .filter((d) => d);\n                }\n                task.dependencies = deps;\n            }\n\n            // uids\n            if (!task.id) {\n                task.id = generate_id(task);\n            }\n\n            return task;\n        });\n\n        this.setup_dependencies();\n    }\n\n    setup_dependencies() {\n        this.dependency_map = {};\n        for (let t of this.tasks) {\n            for (let d of t.dependencies) {\n                this.dependency_map[d] = this.dependency_map[d] || [];\n                this.dependency_map[d].push(t.id);\n            }\n        }\n    }\n\n    refresh(tasks) {\n        this.setup_tasks(tasks);\n        this.change_view_mode();\n    }\n\n    change_view_mode(mode = this.options.view_mode) {\n        this.update_view_scale(mode);\n        this.setup_dates();\n        this.render();\n        // fire viewmode_change event\n        this.trigger_event('view_change', [mode]);\n    }\n\n    update_view_scale(view_mode) {\n        this.options.view_mode = view_mode;\n        if (view_mode === VIEW_MODE.HOUR) {\n            this.options.step = 24 / 24;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.DAY) {\n            this.options.step = 24;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\n            this.options.step = 24 / 2;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n            this.options.step = 24 / 4;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.WEEK) {\n            this.options.step = 24 * 7;\n            this.options.column_width = 140;\n        } else if (view_mode === VIEW_MODE.MONTH) {\n            this.options.step = 24 * 30;\n            this.options.column_width = 120;\n        } else if (view_mode === VIEW_MODE.YEAR) {\n            this.options.step = 24 * 365;\n            this.options.column_width = 120;\n        }\n    }\n\n    setup_dates() {\n        this.setup_gantt_dates();\n        this.setup_date_values();\n    }\n\n    setup_gantt_dates() {\n        this.gantt_start = this.gantt_end = null;\n\n        for (let task of this.tasks) {\n            // set global start and end date\n            if (!this.gantt_start || task._start < this.gantt_start) {\n                this.gantt_start = task._start;\n            }\n            if (!this.gantt_end || task._end > this.gantt_end) {\n                this.gantt_end = task._end;\n            }\n        }\n\n        this.gantt_start = date_utils.start_of(this.gantt_start, 'day');\n        this.gantt_end = date_utils.start_of(this.gantt_end, 'day');\n\n        // add date padding on both sides\n        if (this.view_is([VIEW_MODE.HOUR,VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\n            this.gantt_start = date_utils.add(this.gantt_start, -7, 'day');\n            this.gantt_end = date_utils.add(this.gantt_end, 7, 'day');\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            this.gantt_start = date_utils.start_of(this.gantt_start, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'year');\n        } else if (this.view_is(VIEW_MODE.YEAR)) {\n            this.gantt_start = date_utils.add(this.gantt_start, -2, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 2, 'year');\n        } else {\n            this.gantt_start = date_utils.add(this.gantt_start, -1, 'month');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'month');\n        }\n    }\n\n    setup_date_values() {\n        this.dates = [];\n        let cur_date = null;\n\n        while (cur_date === null || cur_date < this.gantt_end) {\n            if (!cur_date) {\n                cur_date = date_utils.clone(this.gantt_start);\n            } else {\n                if (this.view_is(VIEW_MODE.YEAR)) {\n                    cur_date = date_utils.add(cur_date, 1, 'year');\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\n                    cur_date = date_utils.add(cur_date, 1, 'month');\n                } else {\n                    cur_date = date_utils.add(\n                        cur_date,\n                        this.options.step,\n                        'hour'\n                    );\n                }\n            }\n            this.dates.push(cur_date);\n        }\n    }\n\n    bind_events() {\n        this.bind_grid_click();\n        if (this.options.disabled) return;\n        this.bind_bar_events();\n    }\n\n    render() {\n        this.clear();\n        this.setup_layers();\n        this.make_grid();\n        this.make_dates();\n        this.make_bars();\n        this.make_arrows();\n        this.map_arrows_on_bars();\n        this.set_width();\n        this.set_scroll_position();\n\n\n    }\n\n    setup_layers() {\n        this.layers = {};\n        const layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details'];\n        // make group layers\n        for (let layer of layers) {\n            this.layers[layer] = createSVG('g', {\n                class: layer,\n                append_to: this.$svg,\n            });\n        }\n    }\n    setup_background() {\n        this.layers = {};\n        const layers = ['grid' ,'date'];\n        // make group layers\n        for (let layer of layers) {\n            this.layers[layer] = createSVG('g', {\n                class: layer,\n                append_to: this.$svg,\n            });\n        }\n    }\n\n    make_grid() {\n        this.make_grid_background();\n        this.make_grid_rows();\n        this.make_grid_header();\n        this.make_grid_ticks();\n        this.make_grid_highlights();\n    }\n\n    make_grid_background() {\n        const grid_width = this.dates.length * this.options.column_width;\n        // const grid_height =\n        //     this.options.header_height +\n        //     this.options.padding +\n        //     (this.options.bar_height + this.options.padding) *\n        //         this.tasks.length;\n        const grid_height =\n            this.options.header_height +\n            this.options.padding +\n            (this.options.bar_height + this.options.padding) *\n            this.options.leftRows.length;\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: grid_width,\n            height: grid_height,\n            class: 'grid-background',\n            append_to: this.layers.grid,\n        });\n\n        $.attr(this.$svg, {\n            height: grid_height + this.options.padding + 100,\n            width: '100%',\n        });\n    }\n\n    make_grid_rows() {\n        let counter_rows = 0;\n        const distinctRows = [...new Set(this.tasks.map((x) => x.row_id))];\n        for (let row of distinctRows){\n            counter_rows = counter_rows + 1;\n        }\n        console.log(counter_rows + \" unique rows\")\n\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\n        const lines_layer = createSVG('g', { append_to: this.layers.grid });\n\n        const row_width = this.dates.length * this.options.column_width;\n        const row_height = this.options.bar_height + this.options.padding;\n\n        let row_y = this.options.header_height + this.options.padding / 2;\n\n        // for (let task of this.tasks) {\n        for (let row of distinctRows) {\n            createSVG('rect', {\n                x: 0,\n                y: row_y,\n                width: row_width,\n                height: row_height,\n                class: 'grid-row',\n                append_to: rows_layer,\n            });\n\n            createSVG('line', {\n                x1: 0,\n                y1: row_y + row_height,\n                x2: row_width,\n                y2: row_y + row_height,\n                class: 'row-line',\n                append_to: lines_layer,\n            });\n\n            row_y += this.options.bar_height + this.options.padding;\n        }\n    }\n\n    make_grid_header() {\n        const header_width = this.dates.length * this.options.column_width;\n        const header_height = this.options.header_height + 10;\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: header_width,\n            height: header_height,\n            class: 'grid-header',\n            append_to: this.layers.grid,\n        });\n    }\n\n    make_grid_ticks() {\n        let tick_x = 0;\n        let tick_y = this.options.header_height + this.options.padding / 2;\n        let tick_height =\n            (this.options.bar_height + this.options.padding) *\n            this.tasks.length;\n\n        for (let date of this.dates) {\n            let tick_class = 'tick';\n            // thick tick for monday\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n                tick_class += ' thick';\n            }\n            // thick tick for first week\n            if (\n                this.view_is(VIEW_MODE.WEEK) &&\n                date.getDate() >= 1 &&\n                date.getDate() < 8\n            ) {\n                tick_class += ' thick';\n            }\n            // thick ticks for quarters\n            if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n                tick_class += ' thick';\n            }\n\n            createSVG('path', {\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n                class: tick_class,\n                append_to: this.layers.grid,\n            });\n\n            if (this.view_is(VIEW_MODE.MONTH)) {\n                tick_x +=\n                    (date_utils.get_days_in_month(date) *\n                        this.options.column_width) /\n                    30;\n            } else {\n                tick_x += this.options.column_width;\n            }\n        }\n    }\n\n    make_grid_highlights() {\n        // highlight today's date\n        if (this.view_is(VIEW_MODE.DAY)) {\n            const x =\n                (date_utils.diff(date_utils.today(), this.gantt_start, 'hour') /\n                    this.options.step) *\n                this.options.column_width;\n            const y = 0;\n\n            const width = this.options.column_width;\n            const height =\n                (this.options.bar_height + this.options.padding) *\n                    this.tasks.length +\n                this.options.header_height +\n                this.options.padding / 2;\n\n            createSVG('rect', {\n                x,\n                y,\n                width,\n                height,\n                class: 'today-highlight',\n                append_to: this.layers.grid,\n            });\n        }\n    }\n\n    make_dates() {\n        for (let date of this.get_dates_to_draw()) {\n            if (date === undefined || date === null) return;\n            createSVG('text', {\n                x: date.lower_x,\n                y: date.lower_y,\n                innerHTML: date.lower_text,\n                class: 'lower-text',\n                append_to: this.layers.date,\n            });\n\n            if (date.upper_text) {\n                const $upper_text = createSVG('text', {\n                    x: date.upper_x,\n                    y: date.upper_y,\n                    innerHTML: date.upper_text,\n                    class: 'upper-text',\n                    append_to: this.layers.date,\n                });\n\n                // remove out-of-bound dates\n                if (\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\n                ) {\n                    $upper_text.remove();\n                }\n            }\n        }\n    }\n\n    get_dates_to_draw() {\n        let last_date = null;\n        const dates = this.dates.map((date, i) => {\n            const d = this.get_date_info(date, last_date, i);\n            last_date = date;\n            return d;\n        });\n        return dates;\n    }\n\n    get_date_info(date, last_date, i) {\n        if (date === undefined || date === null) return;\n        if (!last_date) {\n            last_date = date_utils.add(date, 1, 'year');\n        }\n        const date_text = {\n            Hour_lower: date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            'Quarter Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            'Half Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            Day_lower:\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Week_lower:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : date_utils.format(date, 'D', this.options.language),\n            Month_lower: date_utils.format(date, 'MMMM', this.options.language),\n            Year_lower: date_utils.format(date, 'YYYY', this.options.language),\n\n            //上面的字\n            Hour_upper:\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : '',\n            'Quarter Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : '',\n            'Half Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date.getMonth() !== last_date.getMonth()\n                        ? date_utils.format(\n                              date,\n                              'D MMM',\n                              this.options.language\n                          )\n                        : date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Day_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Week_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Month_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n            Year_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n        };\n\n        const base_pos = {\n            x: i * this.options.column_width,\n            lower_y: this.options.header_height,\n            upper_y: this.options.header_height - 25,\n        };\n\n        const x_pos = {\n            Hour_lower: 0,\n            Hour_upper: this.options.column_width * 24 / 2,\n            'Quarter Day_lower': (this.options.column_width * 4) / 2,\n            'Quarter Day_upper': 0,\n            'Half Day_lower': (this.options.column_width * 2) / 2,\n            'Half Day_upper': 0,\n            Day_lower: this.options.column_width / 2,\n            Day_upper: (this.options.column_width * 30) / 2,\n            Week_lower: 0,\n            Week_upper: (this.options.column_width * 4) / 2,\n            Month_lower: this.options.column_width / 2,\n            Month_upper: (this.options.column_width * 12) / 2,\n            Year_lower: this.options.column_width / 2,\n            Year_upper: (this.options.column_width * 30) / 2,\n        };\n\n        return {\n            upper_text: date_text[`${this.options.view_mode}_upper`],\n            lower_text: date_text[`${this.options.view_mode}_lower`],\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n            upper_y: base_pos.upper_y,\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n            lower_y: base_pos.lower_y,\n        };\n    }\n\n    make_bars() {\n        this.bars = this.tasks.map((task) => {\n            const bar = new Bar(this, task);\n            this.layers.bar.appendChild(bar.group);\n            return bar;\n        });\n    }\n\n    make_arrows() {\n        this.arrows = [];\n        for (let task of this.tasks) {\n            let arrows = [];\n            arrows = task.dependencies\n                .map((task_id) => {\n                    const dependency = this.get_task(task_id);\n                    if (!dependency) return;\n                    const arrow = new Arrow(\n                        this,\n                        this.bars[dependency._index], // from_task\n                        this.bars[task._index] // to_task\n                    );\n                    this.layers.arrow.appendChild(arrow.element);\n                    return arrow;\n                })\n                .filter(Boolean); // filter falsy values\n            this.arrows = this.arrows.concat(arrows);\n        }\n    }\n\n    map_arrows_on_bars() {\n        for (let bar of this.bars) {\n            bar.arrows = this.arrows.filter((arrow) => {\n                return (\n                    arrow.from_task.task.id === bar.task.id ||\n                    arrow.to_task.task.id === bar.task.id\n                );\n            });\n        }\n    }\n\n    set_width() {\n        const cur_width = this.$svg.getBoundingClientRect().width;\n        const actual_width = this.$svg\n            .querySelector('.grid .grid-row')\n            .getAttribute('width');\n        if (cur_width < actual_width) {\n            this.$svg.setAttribute('width', actual_width);\n        }\n    }\n\n    set_scroll_position() {\n        const parent_element = this.$svg.parentElement;\n        if (!parent_element) return;\n\n        const hours_before_first_task = date_utils.diff(\n            this.get_oldest_starting_date(),\n            this.gantt_start,\n            'hour'\n        );\n\n        const scroll_pos =\n            (hours_before_first_task / this.options.step) *\n                this.options.column_width -\n            this.options.column_width;\n\n        parent_element.scrollLeft = scroll_pos;\n    }\n\n    bind_grid_click() {\n        $.on(\n            this.$svg,\n            this.options.popup_trigger,\n            '.grid-row, .grid-header',\n            () => {\n                this.unselect_all();\n                this.hide_popup();\n            }\n        );\n    }\n\n    bind_bar_events() {\n        let is_dragging = false;\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing_left = false;\n        let is_resizing_right = false;\n        let parent_bar_id = null;\n        let bars = []; // instanceof Bar\n        this.bar_being_dragged = null;\n\n        function action_in_progress() {\n            return is_dragging || is_resizing_left || is_resizing_right;\n        }\n\n        $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\n            const bar_wrapper = $.closest('.bar-wrapper', element);\n\n            if (element.classList.contains('left')) {\n                is_resizing_left = true;\n            } else if (element.classList.contains('right')) {\n                is_resizing_right = true;\n            } else if (element.classList.contains('bar-wrapper')) {\n                is_dragging = true;\n            }\n\n            bar_wrapper.classList.add('active');\n\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\n            const ids = [\n                parent_bar_id,\n                ...this.get_all_dependent_tasks(parent_bar_id),\n            ];\n            bars = ids.map((id) => this.get_bar(id));\n\n            this.bar_being_dragged = parent_bar_id;\n\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                $bar.ox = $bar.getX();\n                $bar.oy = $bar.getY();\n                $bar.owidth = $bar.getWidth();\n                $bar.finaldx = 0;\n            });\n        });\n\n        $.on(this.$svg, 'mousemove', (e) => {\n            if (!action_in_progress()) return;\n            const dx = e.offsetX - x_on_start;\n            const dy = e.offsetY - y_on_start;\n\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                $bar.finaldx = this.get_snap_position(dx);\n                this.hide_popup();\n                if (is_resizing_left) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx,\n                            width: $bar.owidth - $bar.finaldx,\n                        });\n                    } else {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx,\n                        });\n                    }\n                } else if (is_resizing_right) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            width: $bar.owidth + $bar.finaldx,\n                        });\n                    }\n                } else if (is_dragging) {\n                    bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n                }\n            });\n        });\n\n        document.addEventListener('mouseup', (e) => {\n            if (is_dragging || is_resizing_left || is_resizing_right) {\n                bars.forEach((bar) => bar.group.classList.remove('active'));\n            }\n\n            is_dragging = false;\n            is_resizing_left = false;\n            is_resizing_right = false;\n        });\n\n        $.on(this.$svg, 'mouseup', (e) => {\n            this.bar_being_dragged = null;\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                if (!$bar.finaldx) return;\n                bar.date_changed();\n                bar.set_action_completed();\n            });\n        });\n\n        this.bind_bar_progress();\n    }\n\n    bind_bar_progress() {\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing = null;\n        let bar = null;\n        let $bar_progress = null;\n        let $bar = null;\n\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\n            is_resizing = true;\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\n            const id = $bar_wrapper.getAttribute('data-id');\n            bar = this.get_bar(id);\n\n            $bar_progress = bar.$bar_progress;\n            $bar = bar.$bar;\n\n            $bar_progress.finaldx = 0;\n            $bar_progress.owidth = $bar_progress.getWidth();\n            $bar_progress.min_dx = -$bar_progress.getWidth();\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n        });\n\n        $.on(this.$svg, 'mousemove', (e) => {\n            if (!is_resizing) return;\n            let dx = e.offsetX - x_on_start;\n            let dy = e.offsetY - y_on_start;\n\n            if (dx > $bar_progress.max_dx) {\n                dx = $bar_progress.max_dx;\n            }\n            if (dx < $bar_progress.min_dx) {\n                dx = $bar_progress.min_dx;\n            }\n\n            const $handle = bar.$handle_progress;\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\n            $bar_progress.finaldx = dx;\n        });\n\n        $.on(this.$svg, 'mouseup', () => {\n            is_resizing = false;\n            if (!($bar_progress && $bar_progress.finaldx)) return;\n            bar.progress_changed();\n            bar.set_action_completed();\n        });\n    }\n\n    get_all_dependent_tasks(task_id) {\n        let out = [];\n        let to_process = [task_id];\n        while (to_process.length) {\n            const deps = to_process.reduce((acc, curr) => {\n                acc = acc.concat(this.dependency_map[curr]);\n                return acc;\n            }, []);\n\n            out = out.concat(deps);\n            to_process = deps.filter((d) => !to_process.includes(d));\n        }\n\n        return out.filter(Boolean);\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.view_is(VIEW_MODE.WEEK)) {\n            rem = dx % (this.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 14\n                    ? 0\n                    : this.options.column_width / 7);\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            rem = dx % (this.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 60\n                    ? 0\n                    : this.options.column_width / 30);\n        } else {\n            rem = dx % this.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 2\n                    ? 0\n                    : this.options.column_width);\n        }\n        return position;\n    }\n\n    unselect_all() {\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\n            el.classList.remove('active');\n        });\n    }\n\n    view_is(modes) {\n        if (typeof modes === 'string') {\n            return this.options.view_mode === modes;\n        }\n\n        if (Array.isArray(modes)) {\n            return modes.some((mode) => this.options.view_mode === mode);\n        }\n\n        return false;\n    }\n\n    get_task(id) {\n        return this.tasks.find((task) => {\n            return task.id === id;\n        });\n    }\n\n    get_bar(id) {\n        return this.bars.find((bar) => {\n            return bar.task.id === id;\n        });\n    }\n\n    show_popup(options) {\n        if (!this.popup) {\n            this.popup = new Popup(\n                this.popup_wrapper,\n                this.options.custom_popup_html\n            );\n        }\n        this.popup.show(options);\n    }\n\n    hide_popup() {\n        this.popup && this.popup.hide();\n    }\n\n    trigger_event(event, args) {\n        if (this.options['on_' + event]) {\n            this.options['on_' + event].apply(null, args);\n        }\n    }\n\n    /**\n     * Gets the oldest starting date from the list of tasks\n     *\n     * @returns Date\n     * @memberof Gantt\n     */\n    get_oldest_starting_date() {\n        return this.tasks\n            .map((task) => task._start)\n            .reduce((prev_date, cur_date) =>\n                cur_date <= prev_date ? cur_date : prev_date\n            );\n    }\n\n    /**\n     * Clear all elements from the parent svg element\n     *\n     * @memberof Gantt\n     */\n    clear() {\n        this.$svg.innerHTML = '';\n    }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","month_names","en","es","it","ru","ptBr","fr","tr","zh","de","hu","date_utils","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","parseInt","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replace","push","value","diff","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","slice","now","add","qty","console","log","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","month","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","matches","parentNode","getAttribute","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","disabled","height","options","bar_height","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","_end","_start","step","width","column_width","progress_width","progress","group","class","custom_class","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","draw_bar","draw_progress_bar","draw_label","draw_resize_handles","$bar","rx","ry","classList","$bar_progress","requestAnimationFrame","update_label_position","bar","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","popup_trigger","show_popup","unselect_all","trigger_event","bar_being_dragged","subtitle","language","target_element","title","update_bar_position","dependencies","dep","get_bar","reduce","prev","curr","update_attr","update_handle_position","update_progressbar_position","update_arrow_position","date_changed","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","gantt_start","width_in_units","task_start","view_is","header_height","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","label","getBBox","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","left","Popup","parent","custom_html","make","hide","pointer","show","Error","html","style","clientWidth","position_meta","HTMLElement","getBoundingClientRect","top","transform","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","Gantt","wrapper","tasks","setup_options","setup_tasks","setup_wrapper","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","createElement","$containerleft","row_y","row_height","newHeader","newHeaderText","createTextNode","className","margin","border","lineHeight","fontWeight","row","leftRows","newElement","newText","parent_element","parentElement","popup_wrapper","default_options","view_modes","view_mode","date_format","custom_popup_html","groups","assign","start","end","row_id","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","dependency_map","t","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","setup_background","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","grid","counter_rows","distinctRows","Set","rows_layer","lines_layer","row_width","x1","y1","x2","y2","tick_x","tick_y","tick_height","tick_class","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Hour_lower","Day_lower","Week_lower","Month_lower","Year_lower","Hour_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","task_id","dependency","get_task","Boolean","cur_width","actual_width","scroll_pos","get_oldest_starting_date","scrollLeft","hide_popup","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","contains","offsetX","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","querySelectorAll","el","modes","Array","isArray","some","find","popup","args","apply","prev_date"],"mappings":"kCAAA,MAAMA,EAAO,OACPC,EAAQ,QACRC,EAAM,MACNC,EAAO,OACPC,EAAS,SACTC,EAAS,SACTC,EAAc,cAEdC,EAAc,CAChBC,GAAI,CACA,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,QACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,aACA,UACA,YACA,aAEJC,GAAI,CACA,UACA,WACA,QACA,SACA,SACA,SACA,SACA,SACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,SACA,UACA,OACA,SACA,MACA,OACA,OACA,SACA,WACA,UACA,SACA,WAEJC,KAAM,CACF,UACA,YACA,QACA,QACA,OACA,QACA,QACA,SACA,WACA,UACA,WACA,YAEJC,GAAI,CACA,UACA,UACA,OACA,QACA,MACA,OACA,UACA,OACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,OACA,QACA,OACA,QACA,QACA,UACA,SACA,UACA,QACA,OACA,QACA,UAEJC,GAAI,CACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,OAEJC,GAAI,CACA,SACA,UACA,OACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEJC,GAAI,CACA,SACA,UACA,UACA,UACA,QACA,SACA,SACA,YACA,aACA,UACA,WACA,aAIO,IAAAC,EAAA,CACXC,MAAMC,EAAMC,EAAiB,IAAKC,EAAiB,QAC/C,GAAIF,aAAgBG,KAChB,OAAOH,EAEX,GAAoB,iBAATA,EAAmB,CAC1B,IAAII,EAAYC,EAChB,MAAMC,EAAQN,EAAKO,MAAM,KAEzBH,EAAaE,EAAM,GACdC,MAAMN,GACNO,KAAKC,GAAQC,SAASD,EAAK,MAChCJ,EAAaC,EAAM,IAAMA,EAAM,GAAGC,MAAML,GAGxCE,EAAW,GAAKA,EAAW,GAAK,EAEhC,IAAIO,EAAOP,EAUX,OARIC,GAAcA,EAAWO,SACA,GAArBP,EAAWO,SACXP,EAAW,GAAK,KAAOA,EAAW,GAClCA,EAAW,GAAiC,IAA5BQ,WA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"}